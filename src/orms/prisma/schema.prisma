// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

enum UserRoleEnum {
  GHOST
  USER
  TEACHER
  ADMIN
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  role        UserRole @relation(fields: [roleId], references: [id])
  roleId      Int
  ownedCource Cource[]
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  @@map("users")
}

model UserRole {
  id         Int          @id @default(autoincrement())
  role       UserRoleEnum
  users      User[]
  created_at DateTime     @default(now())
  updated_at DateTime     @updatedAt

  @@map("users-roles")
}

model Cource {
  id          Int          @id @default(autoincrement())
  isDeleted   Boolean      @default(false)
  title       String       @db.VarChar(140)
  description String       @db.VarChar(2000)
  ownerId     Int
  owner       User?        @relation(fields: [ownerId], references: [id])
  parts       CourcePart[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt

  @@map("cources")
}

model CourcePart {
  id           Int            @id @default(autoincrement())
  title        String         @db.VarChar(140)
  Cource       Cource         @relation(fields: [courceId], references: [id])
  courceId     Int
  CourceLesson CourceLesson[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("cources-parts")
}

model CourceLesson {
  id           Int        @id @default(autoincrement())
  title        String     @db.VarChar(140)
  lesson       String     @db.VarChar(2000)
  partOf       CourcePart @relation(fields: [courcePartId], references: [id])
  courcePartId Int
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt

  @@map("cource-lessons")
}
